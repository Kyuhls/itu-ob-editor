@import "~@blueprintjs/core/lib/scss/variables";
@import './mixins';


$pubColorLight: #3DCC91;
$pubColorDark: #0F9960;
$cutColorLight: #FFB366;
$cutColorDark: #D9822B;


:local .issueScheduler {
  display: flex;
  flex-flow: row nowrap;
  align-items: stretch;
  overflow: hidden;

  .calendarPane {
    @include pane;

    width: 280px;
    z-index: 2;
    background: $pt-app-background-color;
    box-shadow: $pt-elevation-shadow-1;
    flex: 0;

    .paneBody {
      display: flex;
      flex-flow: column nowrap;
    }

    :global .bp3-datepicker {
      background: none;
      padding: 0 .5rem;

      .DayPicker-Day, .DayPicker-Day--disabled {
        cursor: default !important;
      }
    }

    .hint {
      align-self: stretch;
      display: flex;
      flex-flow: column nowrap;
      align-items: stretch;
      color: $pt-text-color-muted;
      padding: 0 1rem 0 20px;

      margin-top: 1rem;

      &:last-child {
        margin-bottom: 1rem;
      }
    }
  }

  .selectedDayPane {
    @include sidebar;

    .paneBody {
      display: flex;
      flex-flow: column nowrap;
      justify-content: space-between;
      align-items: stretch;
      padding: 0 20px 20px 20px;
    }
  }

  .issueListPane {
    flex: 1;
    overflow: auto;
  }
}


:local .scheduleForm {
  align-self: stretch;
  display: flex;
  flex-flow: column nowrap;
  align-items: stretch;
  padding: .5rem 20px 1rem 20px;
  flex: 1;

  .scheduleFormPublicationDate {
    @include scheduleFormDateRow($pubColorDark);
  }

  .scheduleFormCutoffDate {
    @include scheduleFormDateRow($cutColorDark);
  }

  .scheduleFormBody {
    flex: 1;

    > * {
      flex: 1;
    }
  }

  .scheduleFormActions {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-around;

    > * {
      flex: 1;
    }
  }
}


:local .editDateButton {
  &:focus {
    outline: none !important;
  }
}


.DayPicker-Day--isPublicationDate {
  @include dayWithDot(before, $pubColorDark);
}
.DayPicker-Day--isCutoffDate {
  @include dayWithDot(after, $cutColorDark);
}
.DayPicker-Day--isNewPublicationDate {
  background: $pubColorLight !important;
}
.DayPicker-Day--isNewCutoffDate {
  background: $cutColorLight !important;
}


/* Upcoming issues list */

:local .upcomingIssues {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-around;
}


:global .issueScheduleCardTransition {
  // NOTE: Must match ITEM_ENTRY_EXIT_TRANSITION_DURATION_MS in issue-scheduler/upcoming component
  // TODO: Pass that value here, DRY
  $duration: 500ms;

  &-enter {
    opacity: 0;
  }
  &-enter-active {
    opacity: 1;
    transition: opacity $duration ease-in !important;
  }
  &-exit {
    opacity: 1;
  }
  &-exit-active {
    opacity: 0;
    transition: opacity $duration ease-in !important;
  }
}


:local .issueCard {
  &:hover {
    z-index: 2;
  }
  .headerLabel {
    :last-child {
      // Icon
      margin-left: 5px;
      vertical-align: top;
    }
  }
}

:local .issueCardContents {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;

  > * {
    display: flex;
    flex-flow: column nowrap;

    > * {
      white-space: nowrap;
    }
  }

  .scheduleInfo {
    > :first-child {
      flex: 1;
    }
  }

  .cutoffDate, .publicationDate {
    > :first-child {
      margin-right: .5rem;
      transform: scale(.8);
    }
  }

  .publicationStatus > * {
    margin-bottom: .25rem;
    text-align: right;
    white-space: nowrap;

    &:last-child {
      margin-bottom: 0;
    }
    > :first-child {
      display: inline;
    }
    > :last-child {
      margin-left: .5rem;
    }
  }

  .publicationStatusPrimary {
    color: $pt-intent-primary;
    font-weight: bold;
  }

  .cutoffDate {
    > :first-child {
      color: $cutColorDark;
    }
  }

  .publicationDate {
    > :first-child {
      color: $pubColorDark;
    }
  }
}

:local .pubDateLabel {
  color: $pubColorDark;
}

:local .cutDateLabel {
  color: $cutColorDark;
}

:local .pubDateBordered {
  border-width: 0 0 2px 0;
  border-style: solid;
}

:local .pubDateLabelBordered {
  @extend .pubDateBordered;
  border-color: $pubColorDark;
}

:local .cutDateLabelBordered {
  @extend .pubDateBordered;
  border-color: $cutColorDark;
}
