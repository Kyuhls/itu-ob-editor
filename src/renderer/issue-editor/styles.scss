@import "~@blueprintjs/core/lib/scss/variables";
@import "renderer/mixins.scss";

$sidebarWidth: 17em;

:local .spinner {
  position: absolute;
  display: block;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%);
}

:local .paneHeader {
  flex-grow: 0;
  z-index: 5;
  font-size: $pt-font-size-small;

  :global .bp3-text-overflow-ellipsis {
    display: flex;
    align-items: center;
  }
  .statusIcon {
    display: inline;
    margin-right: .5rem;
  }
  .paneHeaderIssueId {
    color: $pt-intent-primary;
    margin-left: .1rem;
    font-size: $pt-font-size-large;
  }
}

:local .twoPaneEditor {
  @include twoPaneWindowLayout($sidebarWidth);
}

:local .messageListPane {
  overflow-y: hidden;

  background: $pt-app-background-color;
  position: relative;

  display: flex;
  flex-flow: column nowrap;

  cursor: default;
  -webkit-app-region: drag;
}

:local .selectedMessagePane {
  box-shadow: $pt-elevation-shadow-1;
  position: relative;
  z-index: 2;
  overflow-y: auto;
}

:local .newItemMenu {
  max-width: calc(100vw - #{$sidebarWidth} - 10px);
}

:local .messageEditorDialog {
  max-height: 90vh;

  :global .bp3-label:last-child,
  :global .bp3-form-group:last-child {
    margin-bottom: 0;
  }

  :global .bp3-dialog-body {
    display: flex;
    flex-flow: column nowrap;
    overflow-y: hidden;
  }
}

:local .messageEditorTabs {
  :global .bp3-tab-list {
    margin: 0 1rem;
    transform: translateY(.5rem);

    .bp3-tab-indicator {
      background-color: $pt-text-color;
    }
    .bp3-tab {
      &:focus {
        outline: none;
      }
      &[aria-selected=false] {
        color: $pt-link-color;
      }
      &[aria-selected=true] {
        color: $pt-text-color;
      }
    }
  }
}


/* Freeform text editor */

:local .freeformEditor {
  display: flex;
  flex-flow: column nowrap;
  overflow-y: hidden;

  font-size: 90%;

  :global .ProseMirror {
    flex: 1;
    overflow-y: auto;

    table {
      margin-bottom: 10px;
      td {
        padding: .5rem;
      }
    }

    p:last-of-type {
      margin-bottom: 0;
    }

    ul li {
      margin-bottom: 10px;
    }

    p.empty-node {
      &::before {
        content: "¶" !important;
        font-style: normal;
        opacity: 0.5;
      }
      &:hover::before {
        content: "¶ — empty block" !important;
        opacity: 1;
      }
    }
  }
}

:local .freeformEditorToolbar {
  background: $pt-app-background-color;

  button, button[disabled] {
    cursor: default;
  }
}

:local .amendmentsList {
  margin-top: 1rem;
}

:local .editorMeta {
  flex-shrink: 0;
  padding-left: 20px;
  padding-bottom: 1rem;

  display: flex;
  flex-flow: column nowrap;

  font-size: $pt-font-size-small;
  color: $pt-text-color-muted;

  > * {
    display: block;
  }
}


/* Message type specific editors */


.editor-pane-message-approved_recommendations,
.editor-pane-annex {
  :local .messageEditorPaneHeader {
    box-shadow: $pt-elevation-shadow-1;
    z-index: 1;
  }
}

.editor-pane-annex,
.editor-pane-message-amendment {
  :local .editorMeta {
    > :last-child {
      margin-top: .5rem;
      font-size: $pt-font-size;
    }
  }
}

/* Annex */

.editor-pane-annex {
  display: flex;
  flex-flow: column nowrap;

  :local .annexEditorPosition {
    font-size: $pt-font-size-large;
  }

  .bp3-form-group {
    flex: 1;
    display: flex;
    align-items: flex-start;
    flex-flow: column nowrap;
    padding: 1.5rem 0 0 20px;

    .bp3-datepicker,
    .bp3-form-helper-text {
      margin-top: 1rem;
    }

    .bp3-datepicker {
      padding: 1.5rem;
      background: $pt-app-background-color;
    }
  }
}

/* Approved recommendations */

:local .approvedRecsMeta {
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;

  border-radius: 0 !important;
  padding-left: 20px !important;
  padding-right: 20px !important;

  > :first-child {
    margin-right: 1rem;
  }

  :global .bp3-label {
    white-space: nowrap;
  }
  :global .bp3-input {
    border-radius: 0 !important;
  }

  > * {
    flex: 1;
  }
}

/* Amendment & custom messages */

.editor-pane-message-amendment,
.editor-pane-message-callback_procedures,
.editor-pane-message-iptn,
.editor-pane-message-sanc,
.editor-pane-message-ipns,
.editor-pane-message-org_changes,
.editor-pane-message-misc_communications,
.editor-pane-message-custom {
  display: flex;
  flex-flow: column nowrap;

  :local .messageEditorPaneHeader {
    flex-shrink: 0;
  }

  :local .freeformEditor {
    flex: 1;
    overflow-y: auto;
    padding: .5rem;
    margin: .5rem;
  }
}


/* Telephone service */

@mixin tsAddItemTrigger() {
  border-radius: 0 !important;
}

:local .addCommTrigger {
  @include tsAddItemTrigger();
}

:local .addCountryTrigger {
  @include tsAddItemTrigger();
  width: 100%;
}

:local .tsCountryCommunicationSet {
  border-radius: 0 !important;
}

:local .tsCountryCommunicationEditor {
  display: flex;
  flex-flow: row nowrap;
  overflow: hidden;

  > :first-child {
    margin-right: 1rem;
  }
}

:local .tsCommunication {
  color: red;
  border-radius: 0 !important;
  overflow: hidden;

  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
}

:local .tsCountryButtons {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
}

:local .tsCommunicationFormContents {
  display: flex;
  flex-flow: column nowrap;
  overflow: hidden;
}

:local .openCommButton {
  flex: 1;
  justify-content: flex-start !important;
  margin-right: 1rem;
}

:local .deleteCommButton {
  filter: grayscale(100%);
  opacity: 0.4;
  &:hover {
    filter: none;
    opacity: 1;
  }
}
